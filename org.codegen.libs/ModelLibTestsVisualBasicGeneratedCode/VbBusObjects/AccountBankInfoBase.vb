
'NOTE: DO NOT ADD REFERENCES TO COM.NETU.LIB HERE, INSTEAD ADD
'THE IMPORT ON THE REFERENCES OF THE PROJECT
Imports System.Runtime.InteropServices
Imports System.Collections.Generic
Imports System.Xml.Serialization
Imports System.Runtime.Serialization
Imports System.Data.Linq.Mapping
Imports System.ComponentModel.DataAnnotations

'<comments>
'************************************************************
' Temnplate: ModelBase2.visualBasic.txt
' Class autogenerated on 18-Aug-15 9:46:43 PM by ModelGenerator
' Extends base model object class
' *** DO NOT change code in this class.  
'     It will be re-generated and 
'     overwritten by the code generator ****
' Instead, change code in the extender class AccountBankInfo
'
'************************************************************
'</comments>
Namespace VbBusObjects
    <Table(Name:="AccountInfo")> <SelectObject("AccountInfo")> <KeyFieldName("AccInfoId")> _
    <DefaultMapperAttr(GetType(AccountBankInfoDBMapper)), DataContract, _
    ComVisible(False), Serializable(), System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)> _
    Partial Class AccountBankInfo
        Inherits ModelObject
        Implements IEquatable(Of AccountBankInfo), IAuditable

#Region "Constructor"

        Friend Sub New()
            Me.addValidator(New AccountBankInfoRequiredFieldsValidator)
            Me.Id = ModelObjectKeyGen.nextId()
        End Sub

#End Region

#Region "Children and Parents"

        <OnDeserialized>
     Public Sub OnDeserializedMethod(context As StreamingContext)

        End Sub

        Public Overrides Sub loadObjectHierarchy()
            LoadPrBank()

        End Sub

        Public Overrides Function getChildren() As List(Of ModelObject)
            Dim ret As New List(Of ModelObject)()

            Return ret
        End Function

        Public Overrides Function getParents() As List(Of ModelObject)
            Dim ret As New List(Of ModelObject)()
            If Me._Bank IsNot Nothing AndAlso Me.BankLoaded Then
                ret.Add(Me.PrBank)
            End If

            Return ret
        End Function

#End Region
#Region "Field CONSTANTS"

        Public Const STR_FLD_ACCINFOID As String = "AccInfoId"
        Public Const STR_FLD_CONTACTNAME As String = "ContactName"
        Public Const STR_FLD_CONTACTPHONE As String = "ContactPhone"
        Public Const STR_FLD_CONTACTFAX As String = "ContactFax"
        Public Const STR_FLD_ACCOUNTID As String = "AccountID"
        Public Const STR_FLD_SIGNEEEMPLOYEE As String = "SigneeEmployee"
        Public Const STR_FLD_COMPANYNAME As String = "CompanyName"
        Public Const STR_FLD_COMPANYBANKCODE As String = "CompanyBankCode"
        Public Const STR_FLD_BANKID As String = "BankId"
        Public Const STR_FLD_COOPCODE As String = "COOPCode"
        Public Const STR_FLD_CREATEDATE As String = "Createdate"
        Public Const STR_FLD_UPDATEDATE As String = "Updatedate"
        Public Const STR_FLD_UPDATEUSER As String = "Updateuser"
        Public Const STR_FLD_CREATEUSER As String = "Createuser"


        Public Const FLD_ACCINFOID As Integer = 0
        Public Const FLD_CONTACTNAME As Integer = 1
        Public Const FLD_CONTACTPHONE As Integer = 2
        Public Const FLD_CONTACTFAX As Integer = 3
        Public Const FLD_ACCOUNTID As Integer = 4
        Public Const FLD_SIGNEEEMPLOYEE As Integer = 5
        Public Const FLD_COMPANYNAME As Integer = 6
        Public Const FLD_COMPANYBANKCODE As Integer = 7
        Public Const FLD_BANKID As Integer = 8
        Public Const FLD_COOPCODE As Integer = 9
        Public Const FLD_CREATEDATE As Integer = 10
        Public Const FLD_UPDATEDATE As Integer = 11
        Public Const FLD_UPDATEUSER As Integer = 12
        Public Const FLD_CREATEUSER As Integer = 13



        '''<summary>Returns the names of fields in the object as a string array.
        ''' Useful in automatically setting/getting values from UI objects (windows or web Form)</summary>
        ''' <returns> string array </returns>	 
        Public Overrides Function getFieldList() As String()
            Return New String() {STR_FLD_ACCINFOID, STR_FLD_CONTACTNAME, STR_FLD_CONTACTPHONE, STR_FLD_CONTACTFAX, STR_FLD_ACCOUNTID, STR_FLD_SIGNEEEMPLOYEE, STR_FLD_COMPANYNAME, STR_FLD_COMPANYBANKCODE, STR_FLD_BANKID, STR_FLD_COOPCODE, STR_FLD_CREATEDATE, STR_FLD_UPDATEDATE, STR_FLD_UPDATEUSER, STR_FLD_CREATEUSER}
        End Function

#End Region

#Region "Field Declarations"


        Private _AccInfoId As System.Int64
        Private _ContactName As System.String
        Private _ContactPhone As System.String
        Private _ContactFax As System.String
        Private _AccountID As System.Int64? = Nothing
        Private _SigneeEmployee As System.String
        Private _CompanyName As System.String
        Private _CompanyBankCode As System.String
        Private _BankId As System.Int64? = Nothing
        Private _COOPCode As System.String
        Private _Createdate As System.DateTime? = Nothing
        Private _Updatedate As System.DateTime? = Nothing
        Private _Updateuser As System.String
        Private _Createuser As System.String

        ' *****************************************
        ' ****** CHILD OBJECTS ********************
        <DataMember(Name:="PrBank")>
        Private _Bank As VbBusObjects.Bank = Nothing '' initialize to nothing, for lazy load logic below !!!

        ' *****************************************
        ' ****** END CHILD OBJECTS ********************


#End Region

#Region "Field Properties"

        <Column(Name:="AccInfoId", Storage:="_AccInfoId", IsPrimaryKey:=True, DbType:="int NOT NULL", CanBeNull:=False)> _
    <DataMember> Overridable Property PrAccInfoId As System.Int64
            Get
                Return _AccInfoId
            End Get
            Set(ByVal value As System.Int64)
                If ModelObject.valueChanged(_AccInfoId, value) Then
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_ACCINFOID)
                    End If
                    Me._AccInfoId = value

                    Me.raiseBroadcastIdChange()

                End If
            End Set
        End Property
        <Column(Name:="ContactName", Storage:="_ContactName", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrContactName As System.String
            Get
                Return _ContactName
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_ContactName, value) Then
                    If value IsNot Nothing AndAlso value.Length > 100 Then
                        Throw New ModelObjectFieldTooLongException("ContactName")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_CONTACTNAME)
                    End If
                    Me._ContactName = value

                End If
            End Set
        End Property
        <Column(Name:="ContactPhone", Storage:="_ContactPhone", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrContactPhone As System.String
            Get
                Return _ContactPhone
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_ContactPhone, value) Then
                    If value IsNot Nothing AndAlso value.Length > 20 Then
                        Throw New ModelObjectFieldTooLongException("ContactPhone")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_CONTACTPHONE)
                    End If
                    Me._ContactPhone = value

                End If
            End Set
        End Property
        <Column(Name:="ContactFax", Storage:="_ContactFax", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrContactFax As System.String
            Get
                Return _ContactFax
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_ContactFax, value) Then
                    If value IsNot Nothing AndAlso value.Length > 20 Then
                        Throw New ModelObjectFieldTooLongException("ContactFax")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_CONTACTFAX)
                    End If
                    Me._ContactFax = value

                End If
            End Set
        End Property
        <Column(Name:="accountID", Storage:="_AccountID", IsPrimaryKey:=False, DbType:="int", CanBeNull:=True)> _
    <DataMember> Overridable Property PrAccountID As System.Int64?
            Get
                Return _AccountID
            End Get
            Set(ByVal value As System.Int64?)
                If ModelObject.valueChanged(_AccountID, value) Then
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_ACCOUNTID)
                    End If
                    Me._AccountID = value

                End If
            End Set
        End Property
        <Column(Name:="signeeEmployee", Storage:="_SigneeEmployee", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrSigneeEmployee As System.String
            Get
                Return _SigneeEmployee
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_SigneeEmployee, value) Then
                    If value IsNot Nothing AndAlso value.Length > 100 Then
                        Throw New ModelObjectFieldTooLongException("signeeEmployee")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_SIGNEEEMPLOYEE)
                    End If
                    Me._SigneeEmployee = value

                End If
            End Set
        End Property
        <Column(Name:="CompanyName", Storage:="_CompanyName", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrCompanyName As System.String
            Get
                Return _CompanyName
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_CompanyName, value) Then
                    If value IsNot Nothing AndAlso value.Length > 255 Then
                        Throw New ModelObjectFieldTooLongException("CompanyName")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_COMPANYNAME)
                    End If
                    Me._CompanyName = value

                End If
            End Set
        End Property
        <Column(Name:="CompanyBankCode", Storage:="_CompanyBankCode", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrCompanyBankCode As System.String
            Get
                Return _CompanyBankCode
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_CompanyBankCode, value) Then
                    If value IsNot Nothing AndAlso value.Length > 20 Then
                        Throw New ModelObjectFieldTooLongException("CompanyBankCode")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_COMPANYBANKCODE)
                    End If
                    Me._CompanyBankCode = value

                End If
            End Set
        End Property
        <Column(Name:="BankId", Storage:="_BankId", IsPrimaryKey:=False, DbType:="int", CanBeNull:=True)> _
    <DataMember> Overridable Property PrBankId As System.Int64?
            Get
                Return _BankId
            End Get
            Set(ByVal value As System.Int64?)
                If ModelObject.valueChanged(_BankId, value) Then
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_BANKID)
                    End If
                    Me._BankId = value

                End If
            End Set
        End Property
        <Column(Name:="COOPCode", Storage:="_COOPCode", IsPrimaryKey:=False, DbType:="nvarchar", CanBeNull:=True)> _
    <DataMember> Overridable Property PrCOOPCode As System.String
            Get
                Return _COOPCode
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_COOPCode, value) Then
                    If value IsNot Nothing AndAlso value.Length > 100 Then
                        Throw New ModelObjectFieldTooLongException("COOPCode")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_COOPCODE)
                    End If
                    Me._COOPCode = value

                End If
            End Set
        End Property
        <Column(Name:="createdate", Storage:="_Createdate", IsPrimaryKey:=False, DbType:="datetime NOT NULL", CanBeNull:=False)> _
    <DataMember> Overridable Property Createdate As System.DateTime? _
            Implements IAuditable.CreateDate
            Get
                Return _Createdate
            End Get
            Set(ByVal value As System.DateTime?)
                If ModelObject.valueChanged(_Createdate, value) Then
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_CREATEDATE)
                    End If
                    Me._Createdate = value

                End If
            End Set
        End Property
        <Column(Name:="updatedate", Storage:="_Updatedate", IsPrimaryKey:=False, DbType:="datetime NOT NULL", CanBeNull:=False)> _
    <DataMember> Overridable Property Updatedate As System.DateTime? _
            Implements IAuditable.UpdateDate
            Get
                Return _Updatedate
            End Get
            Set(ByVal value As System.DateTime?)
                If ModelObject.valueChanged(_Updatedate, value) Then
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_UPDATEDATE)
                    End If
                    Me._Updatedate = value

                End If
            End Set
        End Property
        <Column(Name:="updateuser", Storage:="_Updateuser", IsPrimaryKey:=False, DbType:="varchar NOT NULL", CanBeNull:=False)> _
    <DataMember> Overridable Property Updateuser As System.String _
            Implements IAuditable.UpdateUser
            Get
                Return _Updateuser
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_Updateuser, value) Then
                    If value IsNot Nothing AndAlso value.Length > 50 Then
                        Throw New ModelObjectFieldTooLongException("updateuser")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_UPDATEUSER)
                    End If
                    Me._Updateuser = value

                End If
            End Set
        End Property
        <Column(Name:="createuser", Storage:="_Createuser", IsPrimaryKey:=False, DbType:="varchar NOT NULL", CanBeNull:=False)> _
    <DataMember> Overridable Property Createuser As System.String _
            Implements IAuditable.CreateUser
            Get
                Return _Createuser
            End Get
            Set(ByVal value As System.String)
                If ModelObject.valueChanged(_Createuser, value) Then
                    If value IsNot Nothing AndAlso value.Length > 50 Then
                        Throw New ModelObjectFieldTooLongException("createuser")
                    End If
                    If Me.IsObjectLoading = False Then
                        Me.isDirty = True
                        Me.setFieldChanged(STR_FLD_CREATEUSER)
                    End If
                    Me._Createuser = value

                End If
            End Set
        End Property
#End Region
#Region "Associations"

        'associationParent.txt
#Region "Association Bank"

        <DataMember>
        Friend BankLoaded As Boolean

        ''' <summary>
        ''' Gets/Sets parent object PrBank
        ''' </summary>
        Public Overridable Property PrBank() As VbBusObjects.Bank

            '1-1 parent association
            Set(ByVal value As VbBusObjects.Bank)
                Me._Bank = value
                If value IsNot Nothing Then
                    Me.PrBankId = value.PrBANKID
                    AddHandler value.IDChanged, AddressOf Me.handleParentIdChanged
                Else
                    Me.PrBankId = Nothing
                End If

            End Set


            Get
                'LAZY LOADING! Only hit the database to get the child object if we need it
                If Me._Bank Is Nothing Then
                    Me.LoadPrBank()
                End If

                Return Me._Bank
            End Get
        End Property

        ''' <summary>
        ''' Loads parent object and sets the appropriate properties
        ''' </summary>x
        Private Sub LoadPrBank()

            If Me.BankLoaded Then Return

            'check if object is not loaded
            If Me._Bank Is Nothing AndAlso _
                   Me.PrBankId IsNot Nothing Then

                'call the setter here, not the private variable!
                Me.PrBank = New VbBusObjects.DBMappers.BankDBMapper().findByKey( _
                                 Me.PrBankId.Value)

            End If

            Me.BankLoaded = True

        End Sub

#End Region


#End Region

#Region "Getters/Setters of values by field index / name"
        Public Overloads Overrides Function getAttribute(ByVal fieldKey As Integer) As Object


            Select Case fieldKey
                Case FLD_ACCINFOID
                    Return Me.PrAccInfoId
                Case FLD_CONTACTNAME
                    Return Me.PrContactName
                Case FLD_CONTACTPHONE
                    Return Me.PrContactPhone
                Case FLD_CONTACTFAX
                    Return Me.PrContactFax
                Case FLD_ACCOUNTID
                    Return Me.PrAccountID
                Case FLD_SIGNEEEMPLOYEE
                    Return Me.PrSigneeEmployee
                Case FLD_COMPANYNAME
                    Return Me.PrCompanyName
                Case FLD_COMPANYBANKCODE
                    Return Me.PrCompanyBankCode
                Case FLD_BANKID
                    Return Me.PrBankId
                Case FLD_COOPCODE
                    Return Me.PrCOOPCode
                Case FLD_CREATEDATE
                    Return Me.Createdate
                Case FLD_UPDATEDATE
                    Return Me.Updatedate
                Case FLD_UPDATEUSER
                    Return Me.Updateuser
                Case FLD_CREATEUSER
                    Return Me.Createuser
                Case Else
                    Return Nothing
            End Select


        End Function

        Public Overloads Overrides Function getAttribute(ByVal fieldKey As String) As Object
            fieldKey = fieldKey.ToLower

            If fieldKey = STR_FLD_ACCINFOID.ToLower() Then
                Return Me.PrAccInfoId
            ElseIf fieldKey = STR_FLD_CONTACTNAME.ToLower() Then
                Return Me.PrContactName
            ElseIf fieldKey = STR_FLD_CONTACTPHONE.ToLower() Then
                Return Me.PrContactPhone
            ElseIf fieldKey = STR_FLD_CONTACTFAX.ToLower() Then
                Return Me.PrContactFax
            ElseIf fieldKey = STR_FLD_ACCOUNTID.ToLower() Then
                Return Me.PrAccountID
            ElseIf fieldKey = STR_FLD_SIGNEEEMPLOYEE.ToLower() Then
                Return Me.PrSigneeEmployee
            ElseIf fieldKey = STR_FLD_COMPANYNAME.ToLower() Then
                Return Me.PrCompanyName
            ElseIf fieldKey = STR_FLD_COMPANYBANKCODE.ToLower() Then
                Return Me.PrCompanyBankCode
            ElseIf fieldKey = STR_FLD_BANKID.ToLower() Then
                Return Me.PrBankId
            ElseIf fieldKey = STR_FLD_COOPCODE.ToLower() Then
                Return Me.PrCOOPCode
            ElseIf fieldKey = STR_FLD_CREATEDATE.ToLower() Then
                Return Me.Createdate
            ElseIf fieldKey = STR_FLD_UPDATEDATE.ToLower() Then
                Return Me.Updatedate
            ElseIf fieldKey = STR_FLD_UPDATEUSER.ToLower() Then
                Return Me.Updateuser
            ElseIf fieldKey = STR_FLD_CREATEUSER.ToLower() Then
                Return Me.Createuser
            Else
                Return Nothing
            End If
        End Function

        Public Overloads Overrides Sub setAttribute(ByVal fieldKey As Integer, ByVal val As Object)
            Try
                Select Case fieldKey
                    Case FLD_ACCINFOID
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrAccInfoId = Nothing
                        Else
                            Me.PrAccInfoId = CType(val, System.Int64)
                        End If
                        Return
                    Case FLD_CONTACTNAME
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrContactName = Nothing
                        Else
                            Me.PrContactName = CType(val, System.String)
                        End If
                        Return
                    Case FLD_CONTACTPHONE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrContactPhone = Nothing
                        Else
                            Me.PrContactPhone = CType(val, System.String)
                        End If
                        Return
                    Case FLD_CONTACTFAX
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrContactFax = Nothing
                        Else
                            Me.PrContactFax = CType(val, System.String)
                        End If
                        Return
                    Case FLD_ACCOUNTID
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrAccountID = Nothing
                        Else
                            Me.PrAccountID = CType(val, System.Int64?)
                        End If
                        Return
                    Case FLD_SIGNEEEMPLOYEE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrSigneeEmployee = Nothing
                        Else
                            Me.PrSigneeEmployee = CType(val, System.String)
                        End If
                        Return
                    Case FLD_COMPANYNAME
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrCompanyName = Nothing
                        Else
                            Me.PrCompanyName = CType(val, System.String)
                        End If
                        Return
                    Case FLD_COMPANYBANKCODE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrCompanyBankCode = Nothing
                        Else
                            Me.PrCompanyBankCode = CType(val, System.String)
                        End If
                        Return
                    Case FLD_BANKID
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrBankId = Nothing
                        Else
                            Me.PrBankId = CType(val, System.Int64?)
                        End If
                        Return
                    Case FLD_COOPCODE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.PrCOOPCode = Nothing
                        Else
                            Me.PrCOOPCode = CType(val, System.String)
                        End If
                        Return
                    Case FLD_CREATEDATE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.Createdate = Nothing
                        Else
                            Me.Createdate = CType(val, System.DateTime?)
                        End If
                        Return
                    Case FLD_UPDATEDATE
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.Updatedate = Nothing
                        Else
                            Me.Updatedate = CType(val, System.DateTime?)
                        End If
                        Return
                    Case FLD_UPDATEUSER
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.Updateuser = Nothing
                        Else
                            Me.Updateuser = CType(val, System.String)
                        End If
                        Return
                    Case FLD_CREATEUSER
                        If val Is DBNull.Value OrElse val Is Nothing Then
                            Me.Createuser = Nothing
                        Else
                            Me.Createuser = CType(val, System.String)
                        End If
                        Return
                    Case Else
                        Return
                End Select

            Catch ex As Exception
                Throw New ApplicationException(String.Format("Error setting field with index {0}, value ""{1}"" : {2}", fieldKey, val, ex.Message))
            End Try
        End Sub

        Public Overloads Overrides Sub setAttribute(ByVal fieldKey As String, ByVal val As Object)

            fieldKey = fieldKey.ToLower
            Try
                If fieldKey = STR_FLD_ACCINFOID.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrAccInfoId = Nothing
                    Else
                        Me.PrAccInfoId = Convert.ToInt64(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_CONTACTNAME.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrContactName = Nothing
                    Else
                        Me.PrContactName = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_CONTACTPHONE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrContactPhone = Nothing
                    Else
                        Me.PrContactPhone = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_CONTACTFAX.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrContactFax = Nothing
                    Else
                        Me.PrContactFax = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_ACCOUNTID.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrAccountID = Nothing
                    Else
                        Me.PrAccountID = Convert.ToInt64(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_SIGNEEEMPLOYEE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrSigneeEmployee = Nothing
                    Else
                        Me.PrSigneeEmployee = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_COMPANYNAME.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrCompanyName = Nothing
                    Else
                        Me.PrCompanyName = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_COMPANYBANKCODE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrCompanyBankCode = Nothing
                    Else
                        Me.PrCompanyBankCode = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_BANKID.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrBankId = Nothing
                    Else
                        Me.PrBankId = Convert.ToInt64(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_COOPCODE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.PrCOOPCode = Nothing
                    Else
                        Me.PrCOOPCode = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_CREATEDATE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.Createdate = Nothing
                    Else
                        Me.Createdate = Convert.ToDateTime(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_UPDATEDATE.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.Updatedate = Nothing
                    Else
                        Me.Updatedate = Convert.ToDateTime(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_UPDATEUSER.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.Updateuser = Nothing
                    Else
                        Me.Updateuser = Convert.ToString(val)
                    End If
                    Return
                ElseIf fieldKey = STR_FLD_CREATEUSER.ToLower() Then
                    If val Is DBNull.Value OrElse val Is Nothing Then
                        Me.Createuser = Nothing
                    Else
                        Me.Createuser = Convert.ToString(val)
                    End If
                    Return
                End If
            Catch ex As Exception
                Throw New ApplicationException(String.Format("Error setting field with index {0}, value ""{1}"" : {2}", fieldKey, val, ex.Message))
            End Try

        End Sub

#End Region
#Region "Overrides of GetHashCode, Equals "
        Public Overloads Function Equals(ByVal other As AccountBankInfo) As Boolean _
            Implements System.IEquatable(Of AccountBankInfo).Equals

            'typesafe equals, checks for equality of fields
            If other Is Nothing Then Return False
            If other Is Me Then Return True

            Return Me.PrAccInfoId = other.PrAccInfoId _
                AndAlso Me.PrContactName = other.PrContactName _
                AndAlso Me.PrContactPhone = other.PrContactPhone _
                AndAlso Me.PrContactFax = other.PrContactFax _
                AndAlso Me.PrAccountID.GetValueOrDefault = other.PrAccountID.GetValueOrDefault _
                AndAlso Me.PrSigneeEmployee = other.PrSigneeEmployee _
                AndAlso Me.PrCompanyName = other.PrCompanyName _
                AndAlso Me.PrCompanyBankCode = other.PrCompanyBankCode _
                AndAlso Me.PrBankId.GetValueOrDefault = other.PrBankId.GetValueOrDefault _
                AndAlso Me.PrCOOPCode = other.PrCOOPCode _
                AndAlso Me.Createdate.GetValueOrDefault = other.Createdate.GetValueOrDefault _
                AndAlso Me.Updatedate.GetValueOrDefault = other.Updatedate.GetValueOrDefault _
                AndAlso Me.Updateuser = other.Updateuser _
                AndAlso Me.Createuser = other.Createuser

        End Function

        Public Overrides Function GetHashCode() As Integer
            'using Xor has the advantage of not overflowing the integer.
            Return Me.PrAccInfoId.GetHashCode _
                    Xor Me.getStringHashCode(Me.PrContactName) _
                    Xor Me.getStringHashCode(Me.PrContactPhone) _
                    Xor Me.getStringHashCode(Me.PrContactFax) _
                    Xor Me.PrAccountID.GetHashCode _
                    Xor Me.getStringHashCode(Me.PrSigneeEmployee) _
                    Xor Me.getStringHashCode(Me.PrCompanyName) _
                    Xor Me.getStringHashCode(Me.PrCompanyBankCode) _
                    Xor Me.PrBankId.GetHashCode _
                    Xor Me.getStringHashCode(Me.PrCOOPCode) _
                    Xor Me.Createdate.GetHashCode _
                    Xor Me.Updatedate.GetHashCode _
                    Xor Me.getStringHashCode(Me.Updateuser) _
                    Xor Me.getStringHashCode(Me.Createuser)

        End Function

        Public Overloads Overrides Function Equals(ByVal Obj As Object) As Boolean

            Dim temp = TryCast(Obj, AccountBankInfo)
            If temp IsNot Nothing Then
                Return Me.Equals(temp)
            Else
                Return False
            End If

        End Function

        Public Shared Operator =(ByVal obj1 As AccountBankInfo, ByVal obj2 As AccountBankInfo) As Boolean
            Return Object.Equals(obj1, obj2)
        End Operator

        Public Shared Operator <>(ByVal obj1 As AccountBankInfo, ByVal obj2 As AccountBankInfo) As Boolean
            Return Not (obj1 = obj2)
        End Operator

#End Region

#Region "Copy and sort"

        Public Overrides Function copy() As IModelObject
            'creates a shallow copy
            Dim ret As AccountBankInfo = New AccountBankInfo()
            ret.PrAccInfoId = Me.PrAccInfoId
            ret.PrContactName = Me.PrContactName
            ret.PrContactPhone = Me.PrContactPhone
            ret.PrContactFax = Me.PrContactFax
            ret.PrAccountID = Me.PrAccountID
            ret.PrSigneeEmployee = Me.PrSigneeEmployee
            ret.PrCompanyName = Me.PrCompanyName
            ret.PrCompanyBankCode = Me.PrCompanyBankCode
            ret.PrBankId = Me.PrBankId
            ret.PrCOOPCode = Me.PrCOOPCode
            ret.Createdate = Me.Createdate
            ret.Updatedate = Me.Updatedate
            ret.Updateuser = Me.Updateuser
            ret.Createuser = Me.Createuser

            Return ret

        End Function

#End Region

#Region "parentIdChanged"
        'below sub is called when parentIdChanged
        Public Overrides Sub handleParentIdChanged(parentMo As Object, e As IDChangedEventArgs)
            ' Assocations from VbBusObjects.Account
            If (TypeOf parentMo Is VbBusObjects.Account) Then
                Me.PrAccountID = DirectCast(parentMo, VbBusObjects.Account).PrAccountid
            End If
            ' Assocations from VbBusObjects.Bank
            If (TypeOf parentMo Is VbBusObjects.Bank) Then
                Me.PrBankId = DirectCast(parentMo, VbBusObjects.Bank).PrBANKID
            End If
        End Sub
#End Region


#Region "ID Property"

        <DataMember> Public NotOverridable Overrides Property Id() As Object
            Get
                Return Me._AccInfoId
            End Get
            Set(ByVal value As Object)
                Me._AccInfoId = CLng(value)
                Me.raiseBroadcastIdChange()
            End Set
        End Property
#End Region

#Region "Extra Code"

#End Region

    End Class

#Region "Req Fields validator"
    <System.Runtime.InteropServices.ComVisible(False)> _
 Public Class AccountBankInfoRequiredFieldsValidator
        Implements IModelObjectValidator

        Public Sub validate(ByVal imo As org.model.lib.Model.IModelObject) _
                    Implements org.model.lib.IModelObjectValidator.validate

            Dim mo As AccountBankInfo = CType(imo, AccountBankInfo)
            If mo.Createdate Is Nothing Then
                Throw New ModelObjectRequiredFieldException("Createdate")
            End If
            If mo.Updatedate Is Nothing Then
                Throw New ModelObjectRequiredFieldException("Updatedate")
            End If
            If String.IsNullOrEmpty(mo.Updateuser) Then
                Throw New ModelObjectRequiredFieldException("Updateuser")
            End If
            If String.IsNullOrEmpty(mo.Createuser) Then
                Throw New ModelObjectRequiredFieldException("Createuser")
            End If


        End Sub

    End Class
#End Region

End Namespace

