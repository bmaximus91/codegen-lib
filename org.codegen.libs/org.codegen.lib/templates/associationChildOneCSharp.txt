		#region "Association <association_name>"
        //associationChildOneCSharp.txt

		[System.Runtime.Serialization.DataMember]
        public bool <LoadedFlagVariableName> {get; private set;}

		public virtual <datatype> <property_name> {
			//1-1 child association
            set {
                this._<association_name> = value;
				if (  this._<association_name> != null) {
					this._<association_name>.<child_field_runtime> = this.<parent_field_runtime>;
					this.IDChanged += this._<association_name>.handleParentIdChanged;
				}     
            }
            get {
			    //LAZY LOADING! Only hit the database to get the child object if we need it
                if (! this.<LoadedFlagVariableName>) {
					this.<LoadAssociationMethodName>();
                } 
                return this._<association_name>;
            } 
        }
        
        /// <summary>
        /// Loads child object from dabatabase, if not loaded already
        /// <//summary>
        private void <LoadAssociationMethodName>() {
						
			if ( this.<LoadedFlagVariableName>) { return; }

			if ( this._<association_name> == null && this.<parent_field_runtime> !=null)  {
				//IMPORTANT: call setter here, not the private variable
				this.<property_name> = new <db_mapper>().findWhere("<child_db_field>=?", this.<parent_field_runtime>);
				
			} 

			//set the loaded flag here
			this.<LoadedFlagVariableName> = true;
            
        }
		#endregion