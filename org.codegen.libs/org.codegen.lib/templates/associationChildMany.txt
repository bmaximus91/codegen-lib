		
		#Region "Association <association_name>"
		'associationChildMany.txt
		<DataMember>
		Friend <LoadedFlagVariableName> as Boolean

		Public Overridable Function <prop_prefix><association_name_singular>GetAt(ByVal i As Integer) As <datatype>

            me.<LoadAssociationMethodName>
            If Me._<association_name>.Count >= (i - 1) Then
                Return Me._<association_name>.Item(i)
            End If
            Return Nothing

        End Function        
		
		Public Overridable Function <prop_prefix><association_name_singular>Add(val As <datatype>)  as <datatype>

			'1-Many , add a single item!
			me.<LoadAssociationMethodName>
			If (val Is Nothing) Then
                val = <datatype>Factory.Create()
            End If
			val.<child_field_runtime> = me.<parent_field_runtime>
			AddHandler Me.IDChanged, AddressOf val.handleParentIdChanged
			me._<association_name>.add(val)
			return val

        End Function

		 Public Overridable Sub <prop_prefix><association_name>Clear()

            Me.<LoadAssociationMethodName>
            Me._deleted<association_name>.AddRange(Me._<association_name>)
            Me._<association_name>.Clear()

        End Sub

		Public Overridable Sub <association_name_singular>Remove(val As <datatype>) 
			
			me.<LoadAssociationMethodName>
			me._deleted<association_name>.add(val)
			me._<association_name>.remove(val)

        End Sub

		
		Public Overridable Function <getDeletedMethodName>() As IEnumerable(Of <datatype>)  
			
			return me._deleted<association_name>

        End Function

        Public Overridable Property <property_name>() As IEnumerable(Of <datatype>) 

            Get
				'1 to many relation
                'LAZY LOADING! Only hit the database to get the child object if we need it
                If Me._<association_name> Is Nothing Then
                    me.<LoadAssociationMethodName>
                End If ' me._<association_name> is Nothing
				<sort>
                Return Me._<association_name>
            End Get
            
			Set(value as IEnumerable(Of <datatype>))
				if value is nothing then
					Me._<association_name> = nothing
                Else
                    Me._<association_name> = New List(Of <datatype>)
                    Me.addTo<association_name>List(value)
                End If
			End Set

        End Property

		''' <summary>
        ''' Private method to add to the <association_name> List. 
		''' The list must have aldready been initialized
        ''' </summary>
		Private Sub addTo<association_name>List(ByVal value As IEnumerable(Of <datatype>))

			Dim enumtor As IEnumerator(Of <datatype>) = value.GetEnumerator
        
		    While enumtor.MoveNext
                Dim v As <datatype> = enumtor.Current
                AddHandler Me.IDChanged, AddressOf v.handleParentIdChanged
                Me._<association_name>.Add(v)
            End While

        End Sub
        
        ''' <summary>
        ''' Loads child objects from dabatabase, if not loaded already
        ''' </summary>
        private Sub <LoadAssociationMethodName>
			
			if me.<LoadedFlagVariableName> then return
			'init list
			Me._<association_name> = New List(Of <datatype>)

			If Not Me.isNew Then
                
                Me.addTo<association_name>List( new <db_mapper>().findList( _ 
									"<child_db_field>=?", Me.<parent_field_runtime>))
            End If
            
			me.<LoadedFlagVariableName> = true
        End Sub
		#End Region